{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport cometdLib from 'cometd';\nexport const configureCometD = (refElement, protocol, hostname, sessionId) => {\n  let cometd = new cometdLib.CometD();\n  let componentsToUpdate = ['myComponent1', 'myComponent2'];\n  cometdLib.configure({\n    url: \"\".concat(protocol, \"//\").concat(hostname, \"/cometd/45.0\"),\n    requestHeaders: {\n      Authorization: \"OAuth \".concat(sessionId)\n    },\n    logLevel: 'debug',\n    appendMessageTypeToURL: false\n  });\n  cometd.websocketEnabled = false;\n  cometd.handshake(handshakerReply => {\n    if (handshakerReply.successful) {\n      cometd.subscribe('/event/Cloud_News__e', platformEvent => {\n        if (platformEvent && platformEvent.data.payload) {\n          let customEvent = new CustomEvent('updateComponent', {\n            detail: {\n              componentsToUpdate,\n              data: {}\n            },\n            bubbles: true\n          });\n          ReactDOM.findDOMNode(refElement).dispatchEvent(customEvent);\n        }\n      });\n    } else {\n      console.error('Failed to connect to CometD.');\n    }\n  });\n};","map":{"version":3,"sources":["D:\\react\\paltform-events\\src\\cometdConnection.js"],"names":["ReactDOM","cometdLib","configureCometD","refElement","protocol","hostname","sessionId","cometd","CometD","componentsToUpdate","configure","url","requestHeaders","Authorization","logLevel","appendMessageTypeToURL","websocketEnabled","handshake","handshakerReply","successful","subscribe","platformEvent","data","payload","customEvent","CustomEvent","detail","bubbles","findDOMNode","dispatchEvent","console","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,UAAD,EAAaC,QAAb,EAAuBC,QAAvB,EAAiCC,SAAjC,KAA+C;AAC5E,MAAIC,MAAM,GAAG,IAAIN,SAAS,CAACO,MAAd,EAAb;AAEA,MAAIC,kBAAkB,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAzB;AAEAR,EAAAA,SAAS,CAACS,SAAV,CAAoB;AAClBC,IAAAA,GAAG,YAAKP,QAAL,eAAkBC,QAAlB,iBADe;AAElBO,IAAAA,cAAc,EAAE;AAAEC,MAAAA,aAAa,kBAAWP,SAAX;AAAf,KAFE;AAGlBQ,IAAAA,QAAQ,EAAE,OAHQ;AAIlBC,IAAAA,sBAAsB,EAAE;AAJN,GAApB;AAMAR,EAAAA,MAAM,CAACS,gBAAP,GAA0B,KAA1B;AAEAT,EAAAA,MAAM,CAACU,SAAP,CACEC,eAAe,IAAI;AACjB,QAAIA,eAAe,CAACC,UAApB,EAAgC;AAC9BZ,MAAAA,MAAM,CAACa,SAAP,CACE,sBADF,EAEEC,aAAa,IAAI;AACf,YAAIA,aAAa,IAAIA,aAAa,CAACC,IAAd,CAAmBC,OAAxC,EAAiD;AAC/C,cAAIC,WAAW,GAAG,IAAIC,WAAJ,CAChB,iBADgB,EAEhB;AACEC,YAAAA,MAAM,EAAE;AACNjB,cAAAA,kBADM;AAENa,cAAAA,IAAI,EAAE;AAFA,aADV;AAKEK,YAAAA,OAAO,EAAE;AALX,WAFgB,CAAlB;AAUA3B,UAAAA,QAAQ,CAAC4B,WAAT,CAAqBzB,UAArB,EAAiC0B,aAAjC,CAA+CL,WAA/C;AACD;AACF,OAhBH;AAkBD,KAnBD,MAoBK;AACHM,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd;AACD;AACF,GAzBH;AA8BD,CA3CM","sourcesContent":["import ReactDOM from 'react-dom';\nimport cometdLib from 'cometd';\n\nexport const configureCometD = (refElement, protocol, hostname, sessionId) => {\n  let cometd = new cometdLib.CometD();\n\n  let componentsToUpdate = ['myComponent1', 'myComponent2'];\n\n  cometdLib.configure({\n    url: `${protocol}//${hostname}/cometd/45.0`,\n    requestHeaders: { Authorization: `OAuth ${sessionId}` },\n    logLevel: 'debug',\n    appendMessageTypeToURL: false\n  });\n  cometd.websocketEnabled = false;\n\n  cometd.handshake(\n    handshakerReply => {\n      if (handshakerReply.successful) {\n        cometd.subscribe(\n          '/event/Cloud_News__e',\n          platformEvent => {\n            if (platformEvent && platformEvent.data.payload) {\n              let customEvent = new CustomEvent(\n                'updateComponent',\n                {\n                  detail: {\n                    componentsToUpdate,\n                    data: {}\n                  },\n                  bubbles: true\n                }\n              );\n              ReactDOM.findDOMNode(refElement).dispatchEvent(customEvent);\n            }\n          }\n        );\n      }\n      else {\n        console.error('Failed to connect to CometD.');\n      }\n    }\n  );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}